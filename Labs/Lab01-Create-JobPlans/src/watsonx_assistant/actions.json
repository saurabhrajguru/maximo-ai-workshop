{
  "name": "milvus_test-action",
  "type": "action",
  "valid": true,
  "status": "Available",
  "created": "2025-05-08T06:12:53.699Z",
  "updated": "2025-05-16T06:33:37.070Z",
  "language": "en",
  "skill_id": "37f9dd03-a101-4fb2-9ae1-e29d16eddcc5",
  "workspace": {
    "actions": [
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_416",
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.original_text"
                  },
                  "skill_variable": "query_text"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_416",
            "next_step": "step_285"
          },
          {
            "step": "step_285",
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.text"
                  },
                  "skill_variable": "query_text"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_285",
            "condition": {
              "not": {
                "exists": {
                  "skill_variable": "query_text"
                }
              }
            },
            "next_step": "step_910"
          },
          {
            "step": "step_910",
            "output": {
              "generic": []
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "search",
              "response": {
                "query": "",
                "query_type": "natural_language",
                "after_generation": {
                  "mode": "store_and_display",
                  "result_variable": "step_910_result_2",
                  "include_search_results": false
                }
              }
            },
            "variable": "step_910",
            "next_step": "step_207"
          },
          {
            "step": "step_207",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Do you want to create a job plan in maximo based on above information ?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 3,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_207",
            "condition": {
              "exists": {
                "variable": "step_910_result_2",
                "variable_path": "text"
              }
            },
            "next_step": "step_808"
          },
          {
            "step": "step_808",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Job plan creation skipped."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_808",
            "condition": {
              "eq": [
                {
                  "variable": "step_207"
                },
                {
                  "scalar": "no"
                }
              ]
            },
            "next_step": "step_133"
          },
          {
            "step": "step_133",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "(\"[INST] \\n__grounding__\\n\\n<<SYS>>\\n from this response ${step_910_result_2.text}\n  Extract the steps as per query input to create jobplan in maximo using mxapijobplan api,    template for request body is given below:\\n{\\n  \\\"jpnum\\\": \\\"mj3\\\",\\n  \\\"siteid\\\":\\\"BEDFORD\\\",\\n  \\\"description\\\":\\\"test mj\\\",\\n  \\\"jobtask\\\":\\n  {\\n    \\\"TASKSEQUENCE\\\":\\\"1\\\",\\n    \\\"description\\\":\\\"task 1\\\"\\n  }\\n}\\n .Important note: Output must be a valid JSON object. Do not include anything else. Each jobtask description MUST NOT exceed 100 characters.Absolutely no description can be longer than 100 characters â€” this is a hard limit.Assume a field technician is using this. Be direct, simple, and action-oriented.Do not include explanations or markdown. Return only the JSON body.\\n<</SYS>>\").concat( ${query_text} ).concat(\"[/INST]\")"
                  },
                  "skill_variable": "model_input_2"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_133",
            "condition": {
              "eq": [
                {
                  "variable": "step_207"
                },
                {
                  "scalar": "yes"
                }
              ]
            },
            "next_step": "step_857"
          },
          {
            "step": "step_857",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Processing your request through AI integration"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/ml/v1/text/generation",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "3408d5415323ca392bb94b1fdfd03f6259f0ff1e35a65e5750e2740ba2908435",
                  "match_scenario": 10,
                  "catalog_item_id": "ae85ac7f-12c3-406e-bdd2-b480e728bcb2"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "skill_variable": "model_input_2"
                      },
                      "parameter": "input"
                    },
                    {
                      "value": {
                        "scalar": "ibm/granite-3-8b-instruct"
                      },
                      "parameter": "model_id"
                    },
                    {
                      "value": {
                        "scalar": "9889c76d-1281-4046-a13c-97862ba80591"
                      },
                      "parameter": "project_id"
                    },
                    {
                      "value": {
                        "scalar": 500
                      },
                      "parameter": "parameters.max_new_tokens"
                    },
                    {
                      "value": {
                        "scalar": 0
                      },
                      "parameter": "parameters.min_new_tokens"
                    },
                    {
                      "value": {
                        "scalar": "greedy"
                      },
                      "parameter": "parameters.decoding_method"
                    },
                    {
                      "value": {
                        "scalar": 1
                      },
                      "parameter": "parameters.repetition_penalty"
                    }
                  ],
                  "query": [
                    {
                      "value": {
                        "scalar": "2023-05-29"
                      },
                      "parameter": "version"
                    }
                  ]
                },
                "result_variable": "step_857_result_1"
              }
            },
            "variable": "step_857",
            "condition": {
              "eq": [
                {
                  "variable": "step_207"
                },
                {
                  "scalar": "yes"
                }
              ]
            },
            "next_step": "step_960"
          },
          {
            "step": "step_960",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_857_result_1.body.results}[0].generated_text"
                  },
                  "skill_variable": "model_response_2"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_960",
            "condition": {
              "and": [
                {
                  "eq": [
                    {
                      "variable": "step_207"
                    },
                    {
                      "scalar": "yes"
                    }
                  ]
                },
                {
                  "eq": [
                    {
                      "variable": "step_857_result_1",
                      "variable_path": "success"
                    },
                    {
                      "scalar": true
                    }
                  ]
                }
              ]
            },
            "next_step": "step_447"
          },
          {
            "step": "step_447",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Response is : "
                          },
                          {
                            "skill_variable": "model_response_2"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_447",
            "condition": {
              "eq": [
                {
                  "variable": "step_207"
                },
                {
                  "scalar": "yes"
                }
              ]
            },
            "next_step": "step_643"
          },
          {
            "step": "step_643",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Initiating Maximo job plan creation"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${model_response_2}.replaceAll(\"```json\", \"\")\n.replaceAll(\"```\", \"\")\n.replaceAll(\"\\\\n\", \"\")\n.replaceAll(\"\\\\\\\"\", \"\\\"\")\n.replaceAll(\"\\\"{\", \"{\")\n.replaceAll(\"}\\\"\", \"}\")\n.replaceAll('\"', '\\\\\"')\n.replaceAll('\\n', '')"
                  },
                  "skill_variable": "body"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/create-jobplan",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "807406623fafd5ef69ba4a049383e2e3f7796cbe3d71df0901546b6e68a0957d",
                  "match_scenario": 10,
                  "catalog_item_id": "54cec72c-7de7-47f0-9fd2-3032f4a419b9"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "expression": "${body}"
                      },
                      "parameter": "body"
                    }
                  ]
                },
                "result_variable": "step_643_result_1"
              }
            },
            "variable": "step_643",
            "condition": {
              "exists": {
                "skill_variable": "model_response_2"
              }
            },
            "next_step": "step_272"
          },
          {
            "step": "step_272",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": ""
                          },
                          {
                            "variable": "step_643_result_1",
                            "variable_path": "body.message"
                          },
                          {
                            "scalar": "\nAnd your job plan number  is : "
                          },
                          {
                            "variable": "step_643_result_1",
                            "variable_path": "body.jobPlan_number"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_272",
            "condition": {
              "eq": [
                {
                  "variable": "step_643_result_1",
                  "variable_path": "success"
                },
                {
                  "scalar": true
                }
              ]
            }
          }
        ],
        "title": "Q&A_backup",
        "action": "action_28198",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_28198_intent_28985"
        },
        "variables": [
          {
            "title": "",
            "privacy": {
              "enabled": false
            },
            "variable": "step_133",
            "data_type": "any"
          },
          {
            "title": "Do you want to create a job plan in maximo based on above inform",
            "privacy": {
              "enabled": false
            },
            "variable": "step_207",
            "data_type": "yes_no"
          },
          {
            "title": "{variable} And your job plan number is : {variable}",
            "privacy": {
              "enabled": false
            },
            "variable": "step_272",
            "data_type": "any"
          },
          {
            "title": "No response",
            "variable": "step_285",
            "data_type": "any"
          },
          {
            "title": "No response",
            "variable": "step_416",
            "data_type": "any"
          },
          {
            "title": "Response is : {variable}",
            "privacy": {
              "enabled": false
            },
            "variable": "step_447",
            "data_type": "any"
          },
          {
            "title": "Initiating Maximo job plan creation",
            "privacy": {
              "enabled": true
            },
            "variable": "step_643",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_643_result_1",
            "data_type": "any"
          },
          {
            "title": "Job plan creation skipped.",
            "privacy": {
              "enabled": false
            },
            "variable": "step_808",
            "data_type": "any"
          },
          {
            "title": "Processing your request through AI integration",
            "privacy": {
              "enabled": false
            },
            "variable": "step_857",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_857_result_1",
            "data_type": "any"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": false
            },
            "variable": "step_910",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_910_result_1",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_910_result_2",
            "data_type": "any"
          },
          {
            "title": "",
            "privacy": {
              "enabled": false
            },
            "variable": "step_960",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "fallback",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_558",
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "action_28198",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_558_result_1"
              }
            },
            "variable": "step_558"
          }
        ],
        "title": "No action matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "No response",
            "variable": "step_558",
            "data_type": "any"
          },
          {
            "variable": "step_558_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "digression_failure",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't confirm if you wanted to return to previous topic, let me connect to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "digression_failure",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Failed to confirm topic return"
                }
              ]
            },
            "next_step": "step_001"
          },
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. I can connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't assist you. I will connect you to an agent right away."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_003"
          },
          {
            "step": "step_003",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            },
            "next_step": "step_004"
          },
          {
            "step": "step_004",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_004",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Danger word detected"
                }
              ]
            },
            "next_step": "step_005"
          },
          {
            "step": "step_005",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_005",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Profanity detected"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "Topic return failed",
            "variable": "digression_failure",
            "data_type": "any"
          },
          {
            "title": "I'm afraid I don't understand. I can connect you to an agent.",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "I am afraid I do not understand what you are asking, let me conn",
            "variable": "step_003",
            "data_type": "any"
          },
          {
            "title": "It seems this conversation would be best managed",
            "variable": "step_004",
            "data_type": "any"
          },
          {
            "title": "Profanity - It seems this conversation",
            "variable": "step_005",
            "data_type": "any"
          }
        ],
        "next_action": "run_always",
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "danger_word_detected",
            "title": "Connect to agent",
            "handlers": [],
            "resolver": {
              "type": "fallback"
            },
            "variable": "danger_word_detected_variable",
            "condition": {
              "entity": "danger_words"
            },
            "next_step": "profanity_detected"
          },
          {
            "step": "profanity_detected",
            "title": "Show warning",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please use appropriate language when interacting with the assistant."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [
              {
                "type": "max_hits",
                "handler": "max_hits_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "max_hits": 2,
            "resolver": {
              "type": "end_action"
            },
            "variable": "profanity_detected_variable",
            "condition": {
              "entity": "profane_words"
            }
          }
        ],
        "title": "Trigger word detected",
        "action": "run_always",
        "boosts": [],
        "handlers": [],
        "variables": [
          {
            "title": "Profanity detected",
            "variable": "danger_word_detected_variable",
            "data_type": "any"
          },
          {
            "title": "Profane word detected",
            "variable": "profanity_detected_variable",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else"
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Welcome, how can I assist you?"
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_28198",
        "disambiguation_opt_out": true
      }
    ],
    "intents": [
      {
        "intent": "action_28198_intent_28985",
        "examples": []
      },
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "Agent help"
          },
          {
            "text": "Call agent"
          }
        ],
        "description": "Please transfer me to an agent"
      }
    ],
    "entities": [
      {
        "entity": "danger_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "profane_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "sys-yes-no",
        "values": []
      }
    ],
    "metadata": {
      "api_version": {
        "major_version": "v2",
        "minor_version": "2018-11-08"
      }
    },
    "variables": [
      {
        "title": "body",
        "privacy": {
          "enabled": false
        },
        "variable": "body",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "model_input",
        "variable": "model_input",
        "data_type": "string",
        "description": "The question to the LLM"
      },
      {
        "title": "model_input_2",
        "privacy": {
          "enabled": false
        },
        "variable": "model_input_2",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "model_response",
        "variable": "model_response",
        "data_type": "string",
        "description": "The response from the LLM"
      },
      {
        "title": "model_response_2",
        "privacy": {
          "enabled": false
        },
        "variable": "model_response_2",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "passages",
        "variable": "passages",
        "data_type": "string",
        "description": "The passages of texts retrieved from Watson Discovery"
      },
      {
        "title": "query_text",
        "variable": "query_text",
        "data_type": "any",
        "description": "By default the Search action passes the userâ€™s input.text directly."
      },
      {
        "title": "search_results",
        "variable": "search_results",
        "data_type": "any",
        "description": "Response object from Watson Discovery"
      },
      {
        "title": "snippet",
        "variable": "snippet",
        "data_type": "any",
        "description": "Working variable that holds the snippets of text retrieved from Watson Discovery"
      },
      {
        "title": "test",
        "privacy": {
          "enabled": false
        },
        "variable": "test",
        "data_type": "any",
        "description": ""
      }
    ],
    "data_types": [],
    "collections": [],
    "counterexamples": [],
    "system_settings": {
      "nlp": {
        "model": "latest"
      },
      "variable": {
        "format": {
          "time": {
            "pattern": "short"
          },
          "currency": {
            "fraction_digits": 2
          }
        }
      },
      "off_topic": {
        "enabled": true
      },
      "topic_switch": {
        "enabled": true,
        "messages": {
          "enable_confirmation": true,
          "confirmation_failure": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "I'm sorry, I did not catch that, please confirm."
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          },
          "confirmation_request": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Do you want to continue with the previous topic: "
                        },
                        {
                          "system_variable": "digressed_from"
                        },
                        {
                          "scalar": "?"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              },
              {
                "options": [
                  {
                    "label": "Yes",
                    "value": {
                      "input": {
                        "text": "Yes"
                      }
                    }
                  },
                  {
                    "label": "No",
                    "value": {
                      "input": {
                        "text": "No"
                      }
                    }
                  }
                ],
                "response_type": "option",
                "repeat_on_reprompt": true
              }
            ]
          }
        },
        "max_tries": 3
      },
      "generative_ai": {
        "model_id": "ibm/granite-3-8b-instruct"
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "spelling_auto_correct": true
    },
    "learning_opt_out": true
  },
  "description": "created for assistant 1c76effb-2430-4334-8897-6cdad3c6282b",
  "assistant_id": "60104662-6408-4fae-9085-cbce5b407f20",
  "workspace_id": "37f9dd03-a101-4fb2-9ae1-e29d16eddcc5",
  "dialog_settings": {},
  "next_snapshot_version": "1",
  "environment_id": "894eb847-4c67-47d1-b630-6d745eb49211"
}